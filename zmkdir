#!/bin/sh
#
#  zmkdir, zrmdir, zcp, zmv
#  zfs filesystem utilities like mkdir, rmdir, cp, mv
#
#  Copyright (c) 2020-2023 Masato Minda
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
#
#  $Id: zmkdir,v 1.22 2024/01/10 23:24:42 minmin Exp $

[ -x /sbin/zfs ] || { echo "No ZFS system" >&2 ; exit 1 ; }

ZFS=/sbin/zfs

SUDO=sudo
type doas >/dev/null 2>&1 && SUDO=doas

__is_zfs () {
	${ZFS} list "${1}" >/dev/null 2>&1
}

__is_sharenfs () {
	[ $(${ZFS} get -H sharenfs "${1}" | cut -f 3) = "on" ]
}

__get_fs () {
	df "${1}" | tail -1 | awk '{print $1}' || exit
}

__share_zfs () {
	if __is_zfs "${1}" && __is_sharenfs "${1}"; then
		${SUDO} ${ZFS} share "${1}"
	fi
}

__unshare_zfs () {
	if __is_sharenfs "${1}"; then
		${SUDO} ${ZFS} unshare "${1}"
	fi
}

__do_create_zfs () {
	if __is_zfs "${1}" ; then
		echo "Error: ZFS '${1}' exist!" >&2
		exit 2
	fi

	${ZFS} create "${1}" 2>/dev/null	# sharenfs failed

	__share_zfs "${1}"
}

__do_destroy_zfs () {
	local _tzfs=$(__get_fs "${2}")

	if ! __is_zfs "${_tzfs}" || [ "${1}" = "${_tzfs}" ]; then
		echo "Error!: ${2} is not zfs." >&2
		exit 2
	fi

	__unshare_zfs "${_tzfs}"
	${ZFS} destroy ${opt_r} "${_tzfs}" || exit
}

__create_zfs () {
	local _z

	if [ $# -eq 0 ]; then
		echo "Usage: $prog dir [dir ... ]" >&2
		exit 2
	fi

	for _z in "$@"; do
		case "${_z}" in
		.|..|*/*)
			echo "$_z: bad name!" >&2 ;;
		*)
			__do_create_zfs "${czfs}/${_z}" ;;
		esac
	done
}

__destroy_zfs () {
	while getopts 'r' cmd_arg
	do
		case "${cmd_arg}" in
		r)	opt_r=-r ;;
		esac
	done

	shift $((OPTIND - 1))

	if [ $# -eq 0 ]; then
		echo "Usage: $prog [ -r ] dir [dir ... ]" >&2
		exit 2
	fi

	for _z in "$@"; do
		__do_destroy_zfs "${czfs}" "${_z}"
	done
}

__clone_zfs () {
	local _dst _snap _clone

	[ $# -ne 2 ] && { echo "Usage: $prog src dst" >&2 ; exit 2; }
	__is_zfs "${czfs}/${1}" || { echo "${czfs}/${1}: zfs not found!" >&2 ; exit 2 ; }

	case ${2} in

	.|*/*)	echo "${2}: bad name!" >&2
		 exit 2
		 ;;

	..)	_dst="${czfs%/*}/${1}"
		_clone=dotdot_${1}
		if __is_zfs "${_dst}" ; then
			echo "${_dst}: already exits!" >&2
			exit 2
		fi
		;;

	*)	_dst="${czfs}/${2}"
		_clone=${2}
		if __is_zfs "${_dst}" ; then
			_dst="${_dst}/${1}"
			if __is_zfs "${_dst}" ; then
				echo "${_dst}: already exits!" >&2
				exit 2
			fi
		fi
		 ;;
	esac

	_snap=$(date +_clone_${_clone}-%Y%m%d%H%M%S)

	${ZFS} snapshot "${czfs}/${1}@${_snap}" || exit
	${ZFS} clone "${czfs}/${1}@${_snap}" "${_dst}" 2>/dev/null

	__share_zfs "${_dst}"
}

__rename_zfs () {
	local _dst

	[ $# -ne 2 ] && { echo "Usage: $prog src dst" >&2 ; exit 2; }
	__is_zfs "${czfs}/${1}" || { echo "${czfs}/${1}: zfs not found!" >&2 ; exit 2 ; }

	case ${2} in

	.|*/*)	echo "${2}: bad name!" >&2 
		exit 2
		;;

	..)	_dst="${czfs%/*}/${1}"
		if __is_zfs "${_dst}" ; then
			echo "${_dst}: already exits!" >&2
			exit 2
		fi
		;;

	*)	_dst="${czfs}/${2}"
		if __is_zfs "${_dst}" ; then
			_dst="${_dst}/${1}"
			if __is_zfs "${_dst}" ; then
				echo "${_dst}: already exits!" >&2
				exit 2
			fi
		fi
		;;
	esac


	__unshare_zfs "${czfs}/${1}"

	${ZFS} rename "${czfs}/${1}" "${_dst}" 2>/dev/null

	__share_zfs "${_dst}"
}

# ----- program begin -----

prog=${0##*/}

czfs=$(__get_fs .)

if ! __is_zfs "${czfs}" ; then
	echo "${czfs}: not a zfs" >&2
	exit 2
fi

case "${prog}" in
zmkdir)	__create_zfs "$@" ;;
zrmdir)	__destroy_zfs "$@" ;;
zcp)	__clone_zfs "$@" ;;
zmv)	__rename_zfs "$@" ;;
esac
