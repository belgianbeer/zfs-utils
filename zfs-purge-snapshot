#!/bin/sh
#
#  Copyright (c) 2020-2023 Masato Minda
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.

PATH=$PATH:/sbin:/usr/sbin

list_snap='zfs list -H -o name -d 1 -t snapshot'
list_fs='zfs list -H -o name -t filesystem,volume'

__usage () {
	echo "Usage: ${0##*/} [-anrv] zfs [zfs ...]" >&2
	exit 2
}

__snapshot_purge () {
	for _fs in "$@"; do
		if [ $(${list_snap} "${_fs}" | wc -l) = 0 ]; then
			continue
		fi
		_snap0=$(${list_snap} "${_fs}" | head -1)
		_snap1=$(${list_snap} "${_fs}" | tail -1 | sed 's/.*@//')
		[ -n "${verbose}" ] && [ -z "${NO_EXEC}" ] && echo zfs destroy "${_snap0}%${_snap1}"
		${NO_EXEC} zfs destroy "${_snap0}%${_snap1}" || exit
	done
}

__snapshot_purge_only_daily () {
	for _fs in "$@"; do
		if [ $(${list_snap} "${_fs}" | fgrep @_daily_ | wc -l) -le 1 ]; then
			continue
		fi
		_snap0=$(${list_snap} "${_fs}" | fgrep @_daily_ | head -1)
		_snap1=$(${list_snap} "${_fs}" | fgrep @_daily_ | tail -2 | head -1 | sed 's/.*@//')
		[ -n "${verbose}" ] && [ -z "${NO_EXEC}" ] && echo zfs destroy "${_snap0}%${_snap1}"
		${NO_EXEC} zfs destroy "${_snap0}%${_snap1}" || exit
	done
}

while getopts 'anvr' cmd_arg
do
	case "${cmd_arg}" in
	r)	r_flag=-r ;;
	a)	a_flag=YES ;;
	n)	NO_EXEC='echo' ;;
	v)	verbose=YES ;;
	*)	__usage ;;
	esac
done

shift $((OPTIND - 1))

if [ $# -le 0 ]; then
	__usage
fi


if [ -n "${a_flag}" ]; then
	__snapshot_purge $(${list_fs} ${r_flag} "$@")
else
	__snapshot_purge_only_daily $(${list_fs} ${r_flag} "$@")
fi
